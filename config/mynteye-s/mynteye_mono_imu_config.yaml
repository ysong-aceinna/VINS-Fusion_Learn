%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1  

imu_topic: "/mynteye/imu/data_raw"
image0_topic: "/mynteye/left/image_raw"
output_path: "/home/song/vins_fusion/"
cam0_calib: "left_equ.yaml"
#cam0_calib: "left_pinhole.yaml"
# cam0_calib: "left_mei.yaml"
image_width: 752
image_height: 480
image_fps: 10
imu_odr: 200

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# NOTE: body_T_cam0 IS NOT means the a transition matrix which transform the IMU measurements to camera0 frame,
#       but means a transition matrix which transform camera0 frame to IMU frame.!!!

#for S1030, MYNT didn't calibrate IMU and get body_T_cam0 for each camera,
# 2 ways to get body_T_cam: (both of those 2 ways have same values)
#   1-. follow mynt_xxxx_config.yaml
#   2-. follow "https://github.com/slightech/MYNT-EYE-S-SDK/blob/master/tools/writer/config/S1030/imu.params"
#dt:d means data type: double
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
# mynt provide1. YPR:[90.370488552762097  -0.002647065021972  -0.437521128920018]
   data: [-0.0064662, -0.99994994, -0.00763565, 0.00533646,
           0.99997909, -0.00646566, -0.00009558, -0.04302922,
           0.0000462, -0.00763611, 0.99997084, 0.02303124,
           0, 0, 0, 1]

# mynt provide2.效果和上边那组参数差不多。 YPR:[90.403159570234195   0.476996312683687  -0.376445588398664]
   # data: [-0.00703616, -0.99995328, -0.00662858, 0.00352007,
   #       0.99994059, -0.00709095, 0.00827845, -0.04430543, 
   #       -0.00832506, -0.00656994, 0.99994376, 0.02124595,
   #        0, 0, 0, 1]

# yaw 1 deg error. OK. YPR:[89.370488552762097  -0.002647065021972  -0.437521128920018]
   # data: [0.010986826372280,  -0.999910485371986,  -0.007636156718162, 0.00533646,
   #       0.999939641934365,   0.010986858824434,  0.000037700750461, -0.04302922,
   #       0.000046200000131,  -0.007636110026113,   0.999970843419561, 0.02303124,
   #       0, 0, 0, 1]

# yaw 2 deg error. OK. YPR:[88.370488552762097  -0.002647065021972  -0.437521128920018]
   # data: [0.028436506069197,  -0.999566447036216,  -0.007634335725687, 0.00533646,
   #       0.999595599724277,   0.028436029664232,   0.000170964319118, -0.04302922,
   #       0.000046200000131,  -0.007636110026113,   0.999970843419561, 0.02303124,
         # 0, 0, 0, 1]

# yaw 5 deg error. NG. YPR:[85.370488552762097  -0.002647065021972  -0.437521128920018]
   # data: [0.080712326393737,  -0.996708349155828,  -0.007614925552779, 0.00533646,
   #       0.996737436958034,   0.080710324907862,   0.000570280278944, -0.04302922,
   #       0.000046200000131,  -0.007636110026113,   0.999970843419561, 0.02303124,

# yaw 10 deg error. NG. YPR:[80.370488552762097  -0.002647065021972  -0.437521128920018]
   # data: [0.167276583266566,  -0.985881204658063,  -0.007536245260756, 0.00533646,
   #       0.985910007331411,   0.167272054227942,   0.001231794682831, -0.04302922,
   #       0.000046200000131,  -0.007636110026113,   0.999970843419561, 0.02303124,
   #       0, 0, 0, 1]

# Pitch 0.2 deg error. NG . YPR:[90.370488552762097  -0.2  -0.437521128920018]
   # data: [-0.006466160630981,  -0.999950111362913,  -0.007613379800866, 0.00533646,
   #       0.999973001695242,  -0.006439357058857,  -0.003539853284642, -0.04302922,
   #       0.003490651415224,  -0.007636063512467,   0.999964752322166, 0.02303124,
   #       0, 0, 0, 1]

# Pitch 1 deg error. NG. YPR:[90.370488552762097  -1  -0.437521128920018]
   # data: [-0.006465215191700,  -0.999950800747114,  -0.007523102932335, 0.00533646,
   #       0.999826792250574,  -0.006332745790109,  -0.017500909367373, -0.04302922,
   #       0.017452406437284,  -0.007634947017718,   0.999818544083667, 0.02303124,
   #       0, 0, 0, 1]

# Roll 0.2 deg error. NG. YPR:[90.370488552762097  -0.002647065021972  -0.237521128920018]
   # data: [-0.006466200018383,  -0.999970502648612,  -0.004145128466616,  0.00533646,
   #       0.999979092842887,  -0.006465952944562, -0.000073004359181,  -0.04302922,
   #       0.000046200000131,  -0.004145513864553,   0.999991406253253,  -0.04302922,
   #       0, 0, 0, 1]

# Roll 0.43 deg error. NG. YPR:[90.370488552762097  -0.002647065021972  0]
   # data: [-0.006466200018383,  -0.999979093910084,   0.000000298738442, 0.00533646,
   #       0.999979092842887,  -0.006466200025284,  -0.000046199034270, -0.04302922,
   #       0.000046200000131,0,   0.999999998932780, 0.02303124,
   #       0, 0, 0, 1]

# cam1 to body
#    data: [-0.014380957242531,  -0.999896408439910,  -0.000598211604804,   0.005604791061486,
#         0.999770548270838,  -0.014369644367084,  -0.015885794377105,   0.077294310912391,
#         0.015875546955790,  -0.000826528845951,   0.999873630525177,   0.021792708965133,
#                         0,                   0,                   0,   1.000000000000000]

#debug
# data: [-0.0064662, -0.99994994, -0.00763565, 0.00533646,
#      0.99997909, -0.00646566, -0.00009558, 0.077294310912391,
#      0.0000462, -0.00763611, 0.99997084, 0.02303124,
#      0, 0, 0, 1]

# my calibration. cam0 to imu. bad! YPR:[90.263776628965644  -0.221476241729441  -0.047236717720627]
   # data: [-0.00460372, -0.99998908, -0.00080663, 0.00362468,
   #       0.99998193, -0.00460056, -0.00386923, -0.04383144,
   #       0.00386548, -0.00082443, 0.99999219, 0.02419698,
   #       0,          0,          0,          1       ]

#SONG: transition matrix from IMU to body.
IMU_T_body: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0,  0, 1, 0,
           0, -1, 0, 0,
           1,  0, 0, 0,
           0,  0, 0, 1]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
#SONG:结果输出频率.实际程序中并没有使用到这个变量.
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy
show_path: 1            # publish path as topic

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001        # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.8         # gravity magnitude

#acc_n: 0.0268014618074          # accelerometer measurement noise standard deviation. #0.599298904976
#gyr_n: 0.00888232829671        # gyroscope measurement noise standard deviation.     #0.198614898699
#acc_w: 0.00262960861593         # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 0.000379565782927       # gyroscope bias random work noise standard deviation.     #4.0e-5
#
#g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/song/vins_fusion/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

#simulation parameters
b_add_extra_noise: 0     # add extra noise to IMU for simulation; you can close this function by setting 0.
extra_noise_idx: 1      #element index of noise_model_array in "simulator.h"